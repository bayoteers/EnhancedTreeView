[%#
  # The contents of this file are subject to the Mozilla Public
  # License Version 1.1 (the "License"); you may not use this file
  # except in compliance with the License. You may obtain a copy of
  # the License at http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS
  # IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  # implied. See the License for the specific language governing
  # rights and limitations under the License.
  #
  # The Original Code is the Advanced Treeview Bugzilla Extension.
  #
  # The Initial Developer of the Original Code is "Nokia Corporation"
  # Portions created by the Initial Developer are Copyright (C) 2011 the
  # Initial Developer. All Rights Reserved.
  #
  # Contributor(s):
  #   Eero Heino <eero.heino@nokia.com>
  #   Visa Korhonen <visa.korhonen@symbio.com>
  #%]
<link rel="stylesheet" href="extensions/EnhancedTreeView/web/js/jquery/css/ui-lightness/jquery-ui-1.8.10.custom.css">

[% status_field = Bugzilla.get_fields({ name => 'bug_status' }).first %]

<script id="bug_status_field_html" type="text/html">
[% PROCESS "bug/field.html.tmpl"
        bug = bug, field = status_field,
        no_tds = 1, value = 0,
        editable = 1 %]
</script>

<script id="SelectFieldTmpl" type="text/html">
  <td id="<bug_id>_bug_status_editable">
    <select_field> 
  </td>
  <td id="<bug_id>_bug_status_cancel_icon">
    <div class="ui-icon ui-icon-arrowreturnthick-1-w" title="cancel"" 
        onclick="checkIfEditedFieldChanged(false);">
    </div>
  </td>
  <td id="<bug_id>_bug_status_save_icon">
    <div class="ui-icon ui-icon-check" title="save" onclick="checkIfEditedFieldChanged(true);"></div>
  </td>
</script>

<script type="text/javascript">

  // Id of that field, which is currently in editable state
  var editedFieldid = "";
  
  // Value of field, which was assigned when field became to editable state
  var originalValue = "";
  
  // Value (index) of select-element, which was selected when field became to editable state
  var originalSelectedIndex = "";

function getBugEditableStatusHtml(bug_id, old_content)
{
    var bug_status_field = $("#bug_status_field_html").html();

    // HTML of bug severy contains also JavaScript, that has been commented out
    // This is a problem, because HTML contains script-tag. Parsing HTML from
    // HTML-template stops, when 'script' end tag is encountered. 
    // This makes parsed string to contain 'script' opening tag without ending tag.
    // This in turn makes all HTML disappear after 'script' tag, when string is 
    // concatenated into other text. Solution is to rip off 'script' tag from string.
    var split_index = bug_status_field.indexOf('<script');
    bug_status_field = bug_status_field.substring(0, split_index);

    var template = $("#SelectFieldTmpl").html();
    template = template.replace(/<field_name>/g, 'bug_status');
    template = template.replace(/<bug_id>/g, bug_id);
    template = template.replace('<select_field>', bug_status_field);
    return template;
}

function getBugStatusHtml(bug_id, current_value)
{
    var truncated_value = current_value.substr(0, 4);
    var bug_status_html = 
        '<td id="' + bug_id + '_bug_status_static" title="' + current_value + '" ondblclick="makeeditable(\'' + bug_id + '_bug_status\');">';
    bug_status_html += truncated_value;
    bug_status_html += '</td>';
    return bug_status_html;
}

  /**
   * Function checks whether edited field has been changed from original value.
   * If value has changed, field is tried to be saved. Edited field is made hidden
   * static field is made visible. Static field is changed into same value, that is saved, 
   * or original value, if saving is not done.
   *
   * Editable fields of types 'input' and 'select' are handled separately.
   */
  
  function checkIfEditedFieldChanged(mustsave, mustask) {
//    var editField = getInputElementByParentId(editedFieldid + "_editable");
    var newValue = "";
  
    var bugId = editedFieldid.match(/^\d{1,6}/);
    var fieldName = editedFieldid.substr(bugId[0].length + 1);
  
//    if (editField) {
//      // Input element was searched and if it was found, edited field is text-input-type
//      newValue = editField.value;
//
//      // If value is not saved (or it has not changed), original value is restored
//      if (newValue != originalValue) {
//        if (decidetosave(editedFieldid, fieldName, mustsave, mustask)) {
//          save(editedFieldid, newValue);
//          makeInputStatic(editedFieldid, newValue);
//        } else {
//          makeInputStatic(editedFieldid, originalValue);
//        }
//      } else {
//        makeInputStatic(editedFieldid, originalValue);
//      }
//    } else {
      // Else edited field is selection-element. Selection-element be handled separately.
      editableEl = document.getElementById(editedFieldid + "_editable");
      var selectEl = editableEl.getElementsByTagName("select")[0];
      var selectedIndex = selectEl.selectedIndex;

      if (originalSelectedIndex != selectedIndex) {
        // If value is not saved (or it has not changed), original value is restored
        newValue = selectEl.options[selectedIndex].value;
        var oldValue = selectEl.options[originalSelectedIndex].value;
        if (decidetosave(editedFieldid, fieldName, mustsave, mustask)) {
          var notice = "You have to specify a comment when changing the status of a bug from " + oldValue + " to " + newValue;
          var comment = ""
          while(comment == "") {
              comment = prompt(notice);
          }
          if(comment == null) {
              makeSelectStatic(editedFieldid, originalValue, fieldName);
          }
          else {
              save(editedFieldid, newValue, comment);
              makeSelectStatic(editedFieldid, selectEl.value, fieldName);
          }
        } else {
          makeSelectStatic(editedFieldid, originalValue, fieldName);
        }
      } else {
        makeSelectStatic(editedFieldid, originalValue, fieldName);
      }
//    }
  
    editedFieldid = "";
    originalValue = "";
  }

  /**
   * Function makes static field visible and makes editable field hidden,
   * when editable field is type 'select'.
   */
  function makeSelectStatic(fieldid, currentValue, fieldName) {
    var editableId = fieldid + "_editable";
    var cancelId   = fieldid + "_cancel_icon";
    var saveId     = fieldid + "_save_icon";
    var bugId = fieldid.match(/^\d{1,6}/);
    var newHtml = getBugStatusHtml(bugId, currentValue);
    $('#' + cancelId).remove();
    $('#' + saveId).remove();
    $('#' + editableId).replaceWith(newHtml);
  }
  

  /**
   * Function makes static field hidden and editable field visible.
   * Value of edited field is stored so that it can be used when changed value is later saved.
   * While changing the state of one field to editable, id of that field is stored.
   *
   * Static and editable elements are TR-elements. Static element contains static text.
   * Editable TR-element contains element, which is either text-input or select.
   *
   * Editable fields of types 'input' and 'select' are handled separately.
   */
  
  function makeeditable(fieldid) {
    var status = false;
  
    var staticId = fieldid + "_static";
    var editableId = fieldid + "_editable";
    var staticEl = document.getElementById(staticId);

    var bugId = fieldid.match(/^\d{1,6}/);

    var old_content = staticEl.innerHTML;
    var editableHtml = getBugEditableStatusHtml(bugId, old_content);
  
    if (editedFieldid != "" && editedFieldid != fieldid) {
      status = checkIfEditedFieldChanged(true /* must save */ , true /* must ask first */ );
    }

    editedFieldid = fieldid;
    // HTML-content is changed
    var textVal = staticEl.title;
    $(staticEl).replaceWith(editableHtml);
  
//    var allInputs = editableEl.getElementsByTagName("input");
//
//    if (allInputs.length > 0) {
//      // Input element was searched and if it was found, edited field is text-input-type
//      originalValue = allInputs[0].value;
//    } else {
//      // Else edited field is select-element. Select-element is handled separately.
//      var spanEl = staticEl.getElementsByTagName("span")[0];
//      // Title of element equals actual value in every field except assigned_to-field
//
//      var textVal = spanEl.title;

      var selectEl = document.getElementById(editableId).getElementsByTagName("select")[0];
      var allOptions = selectEl.options;
      var selectedIndex = 0;
      var i = 0;
      for (i = 0; i < allOptions.length; i++) {
        if (allOptions[i].value == textVal) {
          selectedIndex = i;
          break;
        }
      }
      var selectedItem = selectEl.options[selectedIndex];
      originalSelectedIndex = selectedIndex;
      originalValue = selectedItem.value;
      selectEl.value = selectedItem.value; 
  }

  /**
   * Function solves whether changed value of field will be saved or not.
   */
  
  function decidetosave(fieldid, fieldName, mustsave, mustask) {
    var decission = false;
  
    // If mustsave is false, this function does nothing, but this is really for clarity of code.
    if (mustsave) {
      if (mustask) {
        if (confirm("Do you want to save changes in " + fieldName)) {
          decission = true;
        } else {
          decission = false;
        }
      } else {
        decission = true;
      }
    } else {
      decission = false;
    }
    return decission;
  }

  /**
   * Function saves value.
   */
  
  function save(fieldid, newValue, comment) {
    var bugId = fieldid.match(/^\d{1,6}/);
    var fieldName = fieldid.substr(bugId[0].length + 1);
  
    synchronous_saveBugField(bugId[0], fieldName, newValue, comment);
  }
  
  /**
   * Function is call-back function, that is called after succesfull ajax call returns.
   * Ajax call if succesfull, if server responds without throwing exception. Ordered
   * errors are shown in error message. Function shows status of saving to user.
   */
  
  function saveResponse(response, status, xhr) {
    var retObj = eval("(" + response + ")");

    if (retObj.errors) {
      alert("There are errors: " + retObj.errormsg);
    } else {
      alert("Success");
    }
  }
  
  /**
   * Function saves value of one bug field into database by doing ajax-call.
   */
  
  function saveBugField(bugId, fieldName, newValue) {
    var json_params = '{ "method": "Bug.update", "params": {"ids" : [ {"' + bugId + '": { "' + fieldName + '": "' + newValue + '"} } ] }, "id" : 0 }';
  
    $.post('page.cgi?id=EnhancedTreeView_ajax.html', {
      schema: 'bug',
      action: 'update',
      data: json_params
    }, saveResponse, 'text');
  }
  
  /* Synchronous call for debugging */
  
  function synchronous_saveBugField(bugId, fieldName, newValue, comment) {
    var json_params = "";
    if(comment && comment != "") {
        json_params = '{ "method": "Bug.update", "params": {"ids" : [ {"' + bugId + '": { "' + fieldName + '": "' + newValue + '", "comment": "' + comment + '"} } ] }, "id" : 0 }';
    }
    else {
        json_params = '{ "method": "Bug.update", "params": {"ids" : [ {"' + bugId + '": { "' + fieldName + '": "' + newValue + '"} } ] }, "id" : 0 }';  
    }
    $.ajax({
      async: false,
      url: 'page.cgi?id=EnhancedTreeView_ajax.html',
      data: {
        schema: 'bug',
        action: 'update',
        data: json_params
      },
      success: saveResponse
    });
  }

</script>

  [% FOREACH b_data IN bugs_data %]
    [% dependson_tree = b_data.dependson_tree %]
    [% ids = b_data.dependson_ids %]
    [% dependson_tree=b_data.dependson_tree %]
    [% blocked_tree=b_data.blocked_tree %]
    [% blocked_ids=b_data.blocked_ids %]
    [% realdepth=b_data.realdepth %]
    [% bugid=b_data.bugid %]
    [% maxdepth=b_data.maxdepth %]
    [% hide_resolved=b_data.hide_resolved %]

    [% tree_name = "dependson_tree" %]
    [% INCLUDE display_tree tree=dependson_tree %]
  [% END %]


[% BLOCK display_tree %]
  [%# INTERFACE
    #   - bugid: the ID of the bug being displayed
    #   - tree: a hash of bug objects and of bug dependencies
    #%]
  [% bug = tree.$bugid %]
  <li id="bug_[% bug.id %]" class='bug'>
    <span>
      <table>
        <tr>
          <td>

            [%- INCLUDE bullet bugid=bugid tree=tree -%]
            <span class="summ[% "_deep" IF tree.dependencies.$bugid.size %]" 
                id="b[% bugid FILTER html %]" 
                [% IF global.seen.$bugid %]
                  onMouseover="duplicatedover('b[% bugid FILTER html %]')"
                  onMouseout="duplicatedout('b[% bugid FILTER html %]')"
                [% END %]>
              [% isclosed = !bug.isopened %]
              [% FILTER closed(isclosed) -%]
                <a title="[% INCLUDE buginfo bug=bug %]"
                    href="show_bug.cgi?id=[% bugid %]">
                  <b>[%- bugid %]:</b>
                </a>
              </td>
              <td id="[% bug.id %]_bug_status_static" title="[% bug.status.name %]" ondblclick="makeeditable('[% bug.id %]_bug_status');">
                [% bug.status.name.truncate(4) %]
              </td>
             <td>
                &nbsp;
                <a href="" onclick="return false;">
                  [% bug.assigned_to.login FILTER email FILTER html %]
                </a>
                [% IF isclosed %]
                  <span>
                [% ELSE %]
                  <span onMouseOver="if(!edit_mode) t_visibility('bug_[% bug.id %]_create', 'show');" 
                      onMouseOut="t_visibility('bug_[% bug.id %]_create','hide');">
                [% END %]
                <span title="[% INCLUDE buginfo bug=bug %]">
                  <span class="summ_text">[%+ bug.short_desc FILTER html %]</span>
                  <span class="summ_info">[[% INCLUDE buginfo %]]</span>

                  <a href="showdependencytree.cgi?id=[% bugid FILTER url_quote %]"
                    class="tree_link">
                    <img src="skins/standard/dependency-tree/tree.png"
                      alt="See dependency tree for [% terms.bug %] [%+ bugid FILTER html %]">
                  </a>
                </span>
              [% END %] <!-- Filter -->
              <span id="bug_[% bug.id %]_create" class='hide finline' onClick="event.stopPropagation(); sticky.push('#bug_[% bug.id %]_create'); // alert(sticky.length);">
                <form  class='finline' id='create_[% bug.id %]' action='page.cgi'>
                  <input type='hidden' value='EnhancedTreeView_display_tree.html' name='id' >
                  <input type='hidden' name='method' value='create' >
                  <input class='create' type='text' style='width: 40px;' name='estimated_time' value='0.00' >
                  <input class='create' type='text' name='short_desc' value='summary' >
                  <input class='create' type='text' name='comment' value=' description' >
                  [%+ INCLUDE bug/field.html.tmpl
                      bug = bug, field = select_fields.bug_severity,
                      no_tds = 1, value = 'task',
                      editable = 1 %]
                  <input class='create' type='submit' name='submit' value='Create' >
                  <input type='hidden' name='product' value='[% bug.product %]' >
                  <input type='hidden' name='component' value='[% bug.component %]' >
                  <input type='hidden' name='version' value='unspecified' >
                  <input type='hidden' name='rep_platform' value='[% bug.rep_platform %]' >
                  <input type='hidden' name='op_sys' value='All' >
                  <input type='hidden' name='bug_status' value='NEW' >
                  <input type='hidden' name='assigned_to' value='[% bug.assigned_to.login_name %]' >
                  <input type='hidden' name='qa_contact' value='' >
                  <input type='hidden' name='cc' value='' >
                  <input type='hidden' name='deadline' value='' >
                  <input type='hidden' name='cf_occurence' value='---' >
                  <input type='hidden' name='cf_operator' value='' >
                  <input type='hidden' name='cf_tescase' value='' >
                  <input type='hidden' name='cf_req' value='' >
                  <input type='hidden' name='cf_localisation' value='---' >
                  <input type='hidden' name='cf_verification' value='---' >
                  <input type='hidden' name='cf_release' value='---' >
                  <input type='hidden' name='keywords' value='' >
                  <input type='hidden' name='dependson' value='' >
                  <input type='hidden' name='blocked' value='[% bug.id %]' >
                  <input type='hidden' name='contenttypemethod' value='autodetect' >
                </form>
                <a href='enter_bug.cgi?product=[% bug.product %]&amp;component=[% bug.component %]=&amp;blocked=[% bug.id %]
                  [% FOREACH field_name = inherited_fields %]
                    &amp;[% field_name %]=
                    [% IF (field_name == "assigned_to") %]
                      [% bug.$field_name.email %]
                    [% ELSE %]
                      [% bug.$field_name %]
                    [% END %]
                  [% END %]'>
                  [create bug]
                </a>
                &nbsp;
                <a class='clone_link' href='enter_bug.cgi?cloned_bug_id=[% bug.id %]&amp;product=[% bug.product %]&amp;component=[% bug.component %]&amp;blocked=
                  [% FOREACH block = bug.blocked %]
                    [% block %],
                  [% END %]
                  [% FOREACH field_name = inherited_fields %]
                    &amp;[% field_name %]=
                    [% IF (field_name == "assigned_to") %]
                      [% bug.$field_name.email %]
                    [% ELSE %]
                      [% bug.$field_name %]
                    [% END %]
                  [% END %]
                  &amp;dependson='>
                  [clone bug]
                </a>
                <script type="text/JavaScript">
                  ajaxify('[% bug.id %]');
                </script>
              </span>
            </span>
            [% IF global.seen.$bugid %]
              <b style='color: red;'>
                <a title="Already displayed above; click to locate"
                    onclick="duplicated('b[% bugid FILTER html %]')"
                    href="#b[% bugid %]">
                    (*)
                </a>
              </b>
            </td>
          </tr>
        </table>
      </span>
      [% ELSE %]
              </span>
            </td>
          </tr>
        </table>
      </span>
      <ul id='children_[% bug.id %]'>
        [% FOREACH depid = tree.dependencies.$bugid %]
          [% INCLUDE display_tree bugid=depid %]
        [% END %]
      </ul>
    [% END %]
  </li>
  [% global.seen.$bugid = 1 %]
[% END %]

[% BLOCK bullet %]
  [% IF tree.dependencies.$bugid.size && ! global.seen.$bugid %]
    [% extra_class = " b_open" %]
    [% extra_args = 'onclick="return doPreToggle(this, event);"' %]
  [% ELSE %]
    [% extra_class = " no_children" %]
  [% END %]
  <a name="b[% bugid %]" 
     class="b [%+ extra_class FILTER none %]"
    style='a:hover
{ 
font-size: 400%;
}'
     title="Click to expand or contract this portion of the tree." [% extra_args FILTER none %]>&nbsp;&nbsp;</a>
[% END %]

[% BLOCK buglink %]
  [% isclosed = !bug.isopened %]
  [% FILTER closed(isclosed) -%]
    <a title="[% INCLUDE buginfo bug=bug %]"
       href="show_bug.cgi?id=[% bugid %]">
      <b>[%- bugid %]:</b>
    </a>
    <span title="[% INCLUDE buginfo bug=bug %]">
      <span onMouseOver="if(!edit_mode) t_visibility('bug_[% bug.id %]_create', 'show');" onMouseOut="t_visibility('bug_[% bug.id %]_create','hide');">
        <span class="summ_text">[%+ bug.short_desc FILTER html %]</span>
        <span class="summ_info">[[% INCLUDE buginfo %]]</span>
      </span>
    </span>
    <a href="showdependencytree.cgi?id=[% bugid FILTER url_quote %]"
       class="tree_link">
      <img src="skins/standard/dependency-tree/tree.png"
           alt="See dependency tree for [% terms.bug %] [%+ bugid FILTER html %]">
    </a>
  [% END %]
[% END %]

[% BLOCK buginfo %]
  [% display_value("bug_status", bug.bug_status) FILTER html -%] [%+ display_value("resolution", bug.resolution) FILTER html %];
  [%-%] assigned to [% bug.assigned_to.login FILTER email FILTER html %]
  [%-%][% "; Target: " _ bug.target_milestone IF bug.target_milestone %]
[% END %]


