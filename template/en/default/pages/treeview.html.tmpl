[%#
  # The contents of this file are subject to the Mozilla Public
  # License Version 1.1 (the "License"); you may not use this file
  # except in compliance with the License. You may obtain a copy of
  # the License at http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS
  # IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  # implied. See the License for the specific language governing
  # rights and limitations under the License.
  #
  # The Original Code is the TreeView Bugzilla Extension.
  #
  # The Initial Developer of the Original Code is Eero Heino
  # Portions created by the Initial Developer are Copyright (C) 2011 the
  # Initial Developer. All Rights Reserved.
  #
  # Contributor(s):
  #   Eero Heino <eero.heino@nokia.com>
  #%]


[%#   javascript_urls = ["js/expanding-tree.js", "extensions/TreeView/web/js/nestedSortable.1.3.1/jquery-1.5.min.js", "extensions/TreeView/web/js/nestedSortable.1.3.1/jquery-ui-1.8.9.custom.min.js", "extensions/TreeView/web/js/nestedSortable.1.3.1/jquery.ui.nestedSortable.js", "extensions/TreeView/web/js/treeview.js"] #%]

[% PROCESS 'global/field-descs.none.tmpl' %]

[% filtered_desc = blocked_tree.$bugid.short_desc FILTER html %]
[% PROCESS global/header.html.tmpl
   title           = "Dependency tree for $terms.Bug $bugid"
   header          = "Dependency tree for 
                      <a href=\"show_bug.cgi?id=$bugid\">$terms.Bug $bugid</a>"
   javascript_urls = ["js/expanding-tree.js"]
   style_urls      = ["skins/standard/dependency-tree.css", "extensions/TreeView/web/css/treeview.css"]

   subheader      = filtered_desc
   doc_section = "hintsandtips.html#dependencytree"

%]

[% PROCESS depthControlToolbar %]

[% INCLUDE tree_section_g ids=b_data.dependson_ids type=1 bsdata = bugs_data %]

[%# INCLUDE tree_section_g ids=b_data.dependson_ids type=2 bsdata = bugs_data #%]

[%# INCLUDE tree_section ids=b_data.dependson_ids type=1 dependson_tree=b_data.dependson_tree blocked_tree=b_data.blocked_tree blocked_ids=b_data.blocked_ids realdepth=b_data.realdepth bugid=b_data.bugid maxdepth=b_data.maxdepth hide_resolved=b_data.hide_resolved #%]

[% PROCESS depthControlToolbar %]

[% PROCESS global/footer.html.tmpl %]

<script type="text/JavaScript" src="extensions/TreeView/web/js/nestedSortable.1.3.1/jquery-1.5.min.js"></script>
<script type="text/JavaScript" src="extensions/TreeView/web/js/nestedSortable.1.3.1/jquery-ui-1.8.9.custom.min.js"></script>
<script type="text/JavaScript" src="extensions/TreeView/web/js/nestedSortable.1.3.1/jquery.ui.nestedSortable.js"></script>
<script type="text/JavaScript" src="extensions/TreeView/web/js/treeview.js"></script>

  <script>
    var original_tree = [];
    var sortable_parent = null;
    $(document).ready(function() {

        $('.edit_mode').hide();
        $('#enable_edit_mode').each(function()
            {

                $(this).click(function()
                    {
                        $('.edit_mode').toggle();
                        $('.read_mode').toggle();
                        $( ".sortable" ).sortable( "option", "disabled", false );
                    });
            });


        $('.loading_element').each(function()
            {
                $(this).hide()
                .ajaxStart(function() {
                    $(this).show();
                })
                .ajaxStop(function() {
                    $(this).hide();
                });

            });
        $('#loadingDiv')
            .hide()  // hide it initially
            .ajaxStart(function() {
                $(this).show();
            })
            .ajaxStop(function() {
                $(this).hide();
            })
        ;

        $('.sortable').nestedSortable({
            disabled: true,
            disableNesting: 'no-nest',
            forcePlaceholderSize: true,
            handle: 'span',
            helper: 'clone',
            items: 'li',
            maxLevels: 30,
            opacity: .6,
            placeholder: 'placeholder',
            revert: 250,
            tabSize: 25,
            tolerance: 'pointer',
            toleranceElement: '> span',
            listType: 'ul',

            start: function (event, ui)
                {
                    sortable_parent = ui.item.parents('li');
                },

            stop: function (event, ui)
                {
                    var done = false;
                    var tree = $(this);
                    var reverted = false;
                    function revert()
                    {
                        alert('refusing dependency loop');
                        tree.sortable('cancel');
                        reverted = true;
                    }
                    var tree_bug_ids = [];
                    // dependency loop detection
                    ui.item.parents('li').each(function ()
                        {
                            // detect in the same tree
                            var parent_li = $(this);
                            // bug ids above inserted element in the target tree.
                            // used to check reverse dependency in other trees
                            tree_bug_ids.push(parent_li.attr('id'));
                            ui.item.parent().find('li').each(function ()
                                {
                                    if ($(this).attr('id') == parent_li.attr('id'))
                                    {
                                        revert();
                                        done = true;
                                        return false;
                                    }
                                });
                            if (done)
                            {
                                return false;
                            }

                            // at the top level
                            if (parent_li.parent().closest('li').attr('id') == 'foo_0')
                            {
                                var done = false;

                                var moved_bug_ids = [ui.item.attr('id')];
                                ui.item.find('li').each(function ()
                                {
                                   moved_bug_ids.push($(this).attr('id'));
                                });

                                // detect other trees
                                parent_li.siblings().each(function ()
                                    {
                                        var found_target_tree_bug = false;
                                        var found_target_bug = false;
                                        function check_bug(bug_id)
                                        {
                                            if ($.inArray(bug_id, tree_bug_ids) > -1)
                                            {
                                                found_target_tree_bug = true;
                                            }
                                            if ($.inArray(bug_id, moved_bug_ids) > -1)
                                            {
                                                found_target_bug = true;
                                            }
                                        }

                                        check_bug($(this).attr('id'));
                                        $(this).find('li').each(function ()
                                            {
                                                check_bug($(this).attr('id'));
                                                if (found_target_bug && found_target_tree_bug)
                                                {
                                                    revert();
                                                    done = true;
                                                    return false;
                                                }

                                            });
                                        if (done)
                                        {
                                            return false;
                                        }

                                    });
                            }
                        });

                    parent_li = ui.item.parents('li');
                    p_id = parent_li.attr('id');

                    if (!reverted)
                    {
                        $('#cancel_edit_mode').removeAttr('disabled');
                        $('#save_tree').removeAttr('disabled');
                        // replace the old parent with the new one for the clone link in all instances of this moved bug
                        $('li[id^='+ui.item.attr('id')+']').each(function ()
                        {
                            var clone_link = $(this).find('.clone_link');
                            var blocked_field = clone_link.attr('href').match('blocked=([0-9,]+)')[0];
                            alert(blocked_field);
                            var new_blocked_field = blocked_field.replace(sortable_parent.attr('id').replace('bug_', ''), p_id.replace('bug_', ''));
                            // disabling link until saved
                            clone_link.attr('hrefnew', clone_link.attr('href').replace(blocked_field, new_blocked_field));
                            clone_link.removeAttr('href');

                        });
                    }
                    item_a_node = $(parent_li.find('span').find('a').get(0));
                    if (p_id && p_id != 'foo_0' && p_id != 'root')
                    {
                        p_id = p_id.split('_')[1];
                        item_a_node.attr('onclick', 'expclo(this);');
                        item_a_node.attr('class', 'b b_open');
                    }
                }
        });
    original_tree = $('ul.sortable').nestedSortable('toArray', {startDepthCount: 0});
    });
  </script>

[% BLOCK tree_section_g %]
  [%# INTERFACE
    #   - ids: a list of bug IDs to be displayed as children
    #   - type: the type of tree. 1 = depends on, 2 = blockeds
    # GLOBALS
    #   - seen: Maintains a global hash of bugs that have been displayed
    #%]
  [% global.seen = {} %]
  [%# Display the tree of bugs that this bug depends on. %]
  <h3>
    Dependencies:
[% FOREACH b_data IN bugs_data %]
    [%+ (loop.count > 1) ? "," : '' %]
    [% bugid = b_data.bugid %]
    [% ids = b_data.dependson_ids %]
    <a href="show_bug.cgi?id=[% bugid %]">
      [% IF loop.count == 1 %]
        [% terms.Bug %]
      [% END %]
      [%+ bugid %]
    </a>
    [% IF type == 1 %]
        [% tree_name = "dependson_tree" %]
        [% IF ids.size %]
        [% ELSE %]
        [% END %]
    [% ELSIF type == 2 %]
        [% tree_name = "blocked_tree" %]
        [% IF ids.size %] 
        [% ELSE %]
        [% END %]
    [% END %]
    [% IF ids.size %]
       <a href="buglist.cgi?bug_id=[% ids.join(",") %]">([%+ (ids.size == 1) ? "one" : ids.size %])</a>
        [%+ IF hide_resolved %]open[% END %]
    [% END %] 
    [% IF maxdepth -%]Up to [% maxdepth %] level[% "s" IF maxdepth > 1 %] deep | [% END -%]
    [% IF user.in_group('editbugs') && ids.size > 1 %]
    <!-- <a href="buglist.cgi?bug_id=[% ids.join(",") %]&amp;tweak=1">change several</a> -->
    [% END %]
[% END %] 
    , <a href="buglist.cgi?bug_id=[% FOREACH b_data IN bugs_data %][% b_data.dependson_ids.join(',') %],[% b_data.bugid %],[% END %]">view all as bug list</a>
  </h3>

    <ul class="tree sortable root no-nest">
    <li id='foo_0'><span></span>
    <ul >
[% FOREACH b_data IN bugs_data %]
    [% dependson_tree = b_data.dependson_tree %]
    [% ids = b_data.dependson_ids %]
    [% dependson_tree=b_data.dependson_tree %]
    [% blocked_tree=b_data.blocked_tree %]
    [% blocked_ids=b_data.blocked_ids %]
    [% realdepth=b_data.realdepth %]
    [% bugid=b_data.bugid %]
    [% maxdepth=b_data.maxdepth %]
    [% hide_resolved=b_data.hide_resolved %]

      [% INCLUDE display_tree tree=$tree_name %]
[% END %]
    </ul>
    </li></ul>

[% END %]



[%###########################################################################%]
[%# Tree-drawing blocks                                                     #%]
[%###########################################################################%]

[% BLOCK tree_section %]
  [%# INTERFACE
    #   - ids: a list of bug IDs to be displayed as children
    #   - type: the type of tree. 1 = depends on, 2 = blockeds
    # GLOBALS
    #   - seen: Maintains a global hash of bugs that have been displayed
    #%]
  [% global.seen = {} %]
  [%# Display the tree of bugs that this bug depends on. %]
  <h3>
    <a href="show_bug.cgi?id=[% bugid %]">[% terms.Bug %] [%+ bugid %]</a> 
    [% IF type == 1 %]
        [% tree_name = "dependson_tree" %]
        [% IF ids.size %]
            depends on 
        [% ELSE %]
            does not depend on any [% terms.bugs %].
        [% END %]
    [% ELSIF type == 2 %]
        [% tree_name = "blocked_tree" %]
        [% IF ids.size %] 
            blocks 
        [% ELSE %]
            does not block any [% terms.bugs %].
        [% END %]
    [% END %]
    [% IF ids.size %]
        [%+ (ids.size == 1) ? "one" : ids.size %]
        [%+ IF hide_resolved %]open[% END %]
        [%+ (ids.size == 1) ? terms.bug : terms.bugs %]:
    [% END %] 
  </h3>
  [% IF ids.size %]
    ([% IF maxdepth -%]Up to [% maxdepth %] level[% "s" IF maxdepth > 1 %] deep | [% END -%]
    <a href="buglist.cgi?bug_id=[% ids.join(",") %]">view as [% terms.bug %] list</a>
    [% IF user.in_group('editbugs') && ids.size > 1 %]
      | <a href="buglist.cgi?bug_id=[% ids.join(",") %]&amp;tweak=1">change several</a>
    [% END %])
    <ol class="tree sortable root">
    <li id='foo_0'><span></span>
    <ol >
      [% INCLUDE display_tree tree=$tree_name %]
    </ol>
    </li></ol>
  [% END %]

[% END %]


[% BLOCK display_tree %]
  [%# INTERFACE
    #   - bugid: the ID of the bug being displayed
    #   - tree: a hash of bug objects and of bug dependencies
    #%]
  [% bug = tree.$bugid %]
  <li id="bug_[% bug.id %]" class='clsbug_[% bug.id %]'>
    <span>
    [%- INCLUDE bullet bugid=bugid tree=tree -%]
    <span class="summ[% "_deep" IF tree.dependencies.$bugid.size %]" 
          id="[% bugid FILTER html %]" 
          [% IF global.seen.$bugid %]
            onMouseover="duplicatedover('[% bugid FILTER html %]')"
            onMouseout="duplicatedout('[% bugid FILTER html %]')"
          [% END %]>
      [%- INCLUDE buglink bug=bug bugid=bugid %]
    </span>
    <br />
   <span class='intend'>
        <a href='enter_bug.cgi?product=[% bug.product %]&component=[% bug.component %]=&blocked=[% bug.id %][% FOREACH field_name = inherited_fields %]&[% field_name %]=[% IF (field_name == "assigned_to") %][% bug.$field_name.email %][% ELSE %][% bug.$field_name %][% END %][% END %]'>
            [create bug]
        </a>
        &nbsp;&nbsp;
        <a class='clone_link' href='enter_bug.cgi?cloned_bug_id=[% bug.id %]&product=[% bug.product %]&component=[% bug.component %]=&blocked=[% FOREACH block = bug.blocked %][% block %],[% END %][% FOREACH field_name = inherited_fields %]&[% field_name %]=[% IF (field_name == "assigned_to") %][% bug.$field_name.email %][% ELSE %][% bug.$field_name %][% END %][% END %]'>
            [clone bug]
        </a>
        
    </span>
    [% IF global.seen.$bugid %]
      <b style='color: red;'><a title="Already displayed above; click to locate"
            onclick="duplicated('[% bugid FILTER html %]')"
            href="#b[% bugid %]">(*)</a></b>
    </span>
    [% ELSIF tree.dependencies.$bugid.size %]
    </span>
      <ul>
        [% FOREACH depid = tree.dependencies.$bugid %]
          [% INCLUDE display_tree bugid=depid %]
        [% END %]
      </ul>
    [% ELSE %]
    </span>
    [% END %]
  </li>
  [% global.seen.$bugid = 1 %]
[% END %]

[% BLOCK bullet %]
  [% IF tree.dependencies.$bugid.size && ! global.seen.$bugid %]
    [% extra_class = " b_open" %]
    [%# extra_args = 'onclick="return doToggle(this, event);"' #%] 
    [%# extra_args = 'onclick="$(this).parent().next(\'ul\').toggle(); $(this).toggleClass(\'b_open\').toggleClass(\'b_closed\');"' #%] 
    [% extra_args = 'onclick="expclo(this);"' %]
  [% END %]
  <a name="b[% bugid %]" 
     class="b [%+ extra_class FILTER none %]"
     title="Click to expand or contract this portion of the tree. Hold down the Ctrl key while clicking to expand or contract all subtrees."
     [% extra_args FILTER none %]>&nbsp;&nbsp;</a>
[% END %]

[% BLOCK buglink %]
  [% isclosed = !bug.isopened %]
  [% FILTER closed(isclosed) -%]
    <a title="[% INCLUDE buginfo bug=bug %]"
       href="show_bug.cgi?id=[% bugid %]">
      <b>[%- bugid %]:</b>
      <span class="summ_text">[%+ bug.short_desc FILTER html %]</span>
      <span class="summ_info">[[% INCLUDE buginfo %]]</span>
    </a>
    <a href="showdependencytree.cgi?id=[% bugid FILTER url_quote %]"
       class="tree_link">
      <img src="skins/standard/dependency-tree/tree.png"
           title="See dependency tree for [% terms.bug %] [%+ bugid FILTER html %]">
    </a>
  [% END %]
[% END %]

[% BLOCK buginfo %]
  [% display_value("bug_status", bug.bug_status) FILTER html -%] [%+ display_value("resolution", bug.resolution) FILTER html %];
  [%-%] assigned to [% bug.assigned_to.login FILTER email FILTER html %]
  [%-%][% "; Target: " _ bug.target_milestone IF bug.target_milestone %]
[% END %]

[%###########################################################################%]
[%# Block for depth control toolbar                                         #%]
[%###########################################################################%]

[% BLOCK depthControlToolbar %]
 <table cellpadding="3" border="0" cellspacing="0" bgcolor="#e0e0e0">
   <tr>
   [%# Hide/show resolved button
       Swaps text depending on the state of hide_resolved %]
   <td align="center">
   <form method="get" action=""
           style="display: inline; margin: 0px;">
     <input name="bug_id" type="hidden" value="[% FOREACH bug_data IN bugs_data %][% bug_data.bugid %],[% END %]">
     <input name='id' type='hidden' value='treeview.html' />
     [% IF maxdepth %]
       <input name="maxdepth" type="hidden" value="[% maxdepth %]">
     [% END %]
     <input type="hidden" name="hide_resolved" value="[% hide_resolved ? 0 : 1 %]">
     <input type="submit" id="toggle_visibility"
            value="[% IF hide_resolved %]Show[% ELSE %]Hide[% END %] Resolved">
   </form>
   </td>

   <td>
     Max Depth:
   </td>

   <td>
     &nbsp;
   </td>

   <td>
   <form method="get" action="showdependencytree.cgi"
         style="display: inline; margin: 0px;">
     [%# set to one form %]
     <input type="submit" id="change_maxdepth"
       value="&nbsp;1&nbsp;" 
       [% "disabled" IF realdepth < 2 || maxdepth == 1 %]>
     <input name="id" type="hidden" value="[% bugid %]">
     <input name="maxdepth" type="hidden" value="1">
     <input name="hide_resolved" type="hidden" value="[% hide_resolved %]">
   </form>
   </td>

   <td>
   <form method="get" action="showdependencytree.cgi"
         style="display: inline; margin: 0px;">
     [%# Minus one form
         Allow subtracting only when realdepth and maxdepth > 1 %]
     <input name="id" type="hidden" value="[% bugid %]">
     <input name="maxdepth" type="hidden" value="[%
         maxdepth == 1 ? 1
                       : ( maxdepth ? maxdepth - 1 : realdepth - 1 )
     %]">
     <input name="hide_resolved" type="hidden" value="[% hide_resolved %]">
     <input type="submit" id="decrease_depth" value="&nbsp;&lt;&nbsp;"
       [% "disabled" IF realdepth < 2 || ( maxdepth && maxdepth < 2 ) %]>
   </form>
   </td>

   <td>
   <form method="get" action="showdependencytree.cgi"
         style="display: inline; margin: 0px;">
     [%# Limit entry form: the button can not do anything when total depth
         is less than two, so disable it %]
     <input name="maxdepth" size="4" maxlength="4" value="[%
         maxdepth > 0 && maxdepth <= realdepth ? maxdepth : ""
     %]">
     <input name="id" type="hidden" value="[% bugid %]">
     <input name="hide_resolved" type="hidden" value="[% hide_resolved %]">
     <noscript>
       <input type="submit" id="change_depth" value="Change"
              [% "disabled" IF realdepth < 2 %]>
     </noscript>
   </form>
   </td>

   <td>
   <form method="get" action="showdependencytree.cgi"
         style="display: inline; margin: 0px;">
     [%# plus one form
         Disable button if total depth < 2, or if depth set to unlimited %]
     <input name="id" type="hidden" value="[% bugid %]">
     [% IF maxdepth %]
       <input name="maxdepth" type="hidden" value="[% maxdepth + 1 %]">
     [% END %]
     <input name="hide_resolved" type="hidden" value="[% hide_resolved %]">
     <input type="submit" id="increase_depth" value="&nbsp;&gt;&nbsp;" 
        [% "disabled" IF realdepth < 2 || !maxdepth || maxdepth >= realdepth %]>
   </form>
   </td>

   <td>
   <form method="get" action="showdependencytree.cgi"
         style="display: inline; margin: 0px;">
     [%# Unlimited button %]
     <input name="id" type="hidden" value="[% bugid %]">
     <input name="hide_resolved" type="hidden" value="[% hide_resolved %]">
     <input type="submit" id="remove_limit"
       value="&nbsp;Unlimited&nbsp;"
       [% "disabled" IF maxdepth == 0 || maxdepth == realdepth %]>
   </form>
   </td>

    <td class='read_mode'>
        <input type='button' id='enable_edit_mode' value='Enable Edit Mode' />
    </td>

    <td class='edit_mode'>
        <input type='button' disabled='disabled' id='cancel_edit_mode' value='Cancel' onclick="history.go(0)" />
        <input type='button' disabled='disabled' id='save_tree' value='Save Tree' />
    </td>
    <td class='loading_element'>
        <img src='extensions/TreeView/web/ajax-loader.gif' />
    </td>
 </tr>
</table>
[% END %]
